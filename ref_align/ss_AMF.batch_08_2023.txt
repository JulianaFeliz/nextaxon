make.file(inputdir=C:\Users\Guest\Desktop\Desert_and_Single_spore_NGS\Single_spore\NGS\pilot,outputdir=C:\Users\Guest\Desktop\Desert_and_Single_spore_NGS\Single_spore, type=fastq, prefix=sspore)
make.contigs(inputdir=C:\Users\Guest\Desktop\Desert_and_Single_spore_NGS\Single_spore\NGS\pilot,outputdir=C:\Users\Guest\Desktop\Desert_and_Single_spore_NGS\Single_spore,file=sspore.files, processors=4)
screen.seqs(fasta=current, group=current, maxambig=4, minlength=300,maxlength=470, maxhomop=15)
unique.seqs()
count.seqs(name=current, group=current)
classify.seqs(fasta=current,count=current,template=1806DB.ng.fasta,taxonomy=1806DB.tax,cutoff=80)
get.lineage(fasta=current, count=current, taxonomy=current, taxon=Glomeromycota)
align.seqs(fasta=current, reference=629ref_aln_cut.fas)
#screen.seqs(fasta=sspore.trim.contigs.good.unique.pick.align, count=sspore.trim.contigs.good.pick.count_table, start=6, end=559)
screen.seqs(fasta=current, count=current, start=4, end=561)
filter.seqs(fasta=current, vertical=T, trump=.)
unique.seqs(fasta=current, count=current)
pre.cluster(fasta=current, count=current, diffs=3)
rename.file(fasta=current, new=ssAMF.fasta)
rename.file(count=current,new=ssAMF.count_table)
split.abund(fasta=current,count=current,cutoff=1,accnos=true)
chimera.vsearch(fasta=ssAMF.abund.fasta, count=ssAMF.abund.count_table, dereplicate=t)
remove.seqs(fasta=current, accnos=current)
cluster(fasta=ssAMF.abund.fasta,count=ssAMF.abund.count_table, method=dgc,cutoff=0.02)
#used 0.02 as cutoff: we don't get otus. We will consider as OTUs all the representative sequences that will be placed on the same node in EPA.
make.shared(list=current,count=current, label=0.02)
get.oturep(fasta=current,list=current,count=current,label=0.02, method=abundance)


